<!--    access.xml
//      
//      Copyright (C) 2011, Institute for System Programming
//                          of the Russian Academy of Sciences (ISPRAS)
//      Author:
//			Gurgen Torozyan <gurgen.torozyan@gmail.com>
//			Vahram Martirosyan <vmartirosyan@gmail.com>
//      
//      This program is free software; you can redistribute it and/or modify
//      it under the terms of the GNU General Public License as published by
//      the Free Software Foundation; either version 2 of the License, or
//      (at your option) any later version.
//      
//      This program is distributed in the hope that it will be useful,
//      but WITHOUT ANY WARRANTY; without even the implied warranty of
//      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//      GNU General Public License for more details.
//      
//      You should have received a copy of the GNU General Public License
//      along with this program; if not, write to the Free Software
//      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
//      MA 02110-1301, USA.
-->

<TestSet Name="name_to_handle">
	<Requires>unistd.h</Requires>
	<Requires>fcntl.h</Requires>
	<Requires>stdio.h</Requires>
	<Requires>stdlib.h</Requires>
	<Test Name="NameToHandleNormal" FaultSimulationReady="true">
		<Description>sys_name_to_handle_at: convert name to handle</Description>
		<Dir count="1">
			<File count="1"/>
		</Dir>
		<Code>
			struct file_handle {
				int handle_size;
				int handle_type;
				void *f_handle;
			};				
			
			struct file_handle fh;
			fh.handle_type = 0;
			fh.f_handle = malloc(100);
			fh.handle_size = 100/sizeof(int);
			int mnt_id;
			errno = 0;
			int ret = syscall(__NR_name_to_handle_at, DirDs[0], (FilePrefix + "0").c_str(), &fh, &mnt_id, 0);
			if(ret != 0)
			{
				Error("Return value error", Fail);
			}
			return Success;
		</Code>
	</Test>
	
	<FaultSimulation>
		<Simulate function="kmalloc" condition="" />
		<Simulate function="copy_to_user" condition="" />
		<!-- ... -->
	</FaultSimulation>
</TestSet>


