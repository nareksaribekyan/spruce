<!--    fstat.xml
//      
//      Copyright (C) 2011, Institute for System Programming
//                          of the Russian Academy of Sciences (ISPRAS)
//      Author:
//			Vahram Martirosyan <vmartirosyan@gmail.com>
//      
//      This program is free software; you can redistribute it and/or modify
//      it under the terms of the GNU General Public License as published by
//      the Free Software Foundation; either version 2 of the License, or
//      (at your option) any later version.
//      
//      This program is distributed in the hope that it will be useful,
//      but WITHOUT ANY WARRANTY; without even the implied warranty of
//      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//      GNU General Public License for more details.
//      
//      You should have received a copy of the GNU General Public License
//      along with this program; if not, write to the Free Software
//      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
//      MA 02110-1301, USA.
-->

<TestSet Name="fstat">
	<Test Name="FstatNormal" FaultSimulationReady="true">
		<Description>This function returns information about a file.</Description>
		<File count="1" />
		<Code>
			File f("FstatNormal_file", S_IRUSR, O_CREAT | O_RDONLY);
		
			int fd = f.GetFileDescriptor();
			Unres ( fd == -1, "Cannot obtain file descriptor.");
			
			struct stat buf;
			
			if ( fstat(fd, &buf) != 0 )
			{
				Error("fstat failed.", Fail);
			}
			
			if ( ( buf.st_mode & 0777 ) != S_IRUSR )
			{
				Error("fstat returned another file mode.", Fail);
			}
			
			return Success;
		</Code>
	</Test>
	<Test Name="FstatBadFile">
		<Description>fd is bad.</Description>
		<Code>
			struct stat st;
			ErrorTest(fstat(-1, &st), -1, EBADF);
		</Code>
	</Test>
	<FaultSimulation>
		<Simulate function="kmalloc" condition="" />
		<Simulate function="copy_to_user" condition="" />
		<!-- ... -->
	</FaultSimulation>
</TestSet>


